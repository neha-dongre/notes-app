{"ast":null,"code":"var _jsxFileName = \"/home/lenon/notes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [groupName, setGroupName] = useState('');\n  const [noteContent, setNoteContent] = useState('');\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    // Load groups and notes from localStorage on component mount\n    const savedGroups = JSON.parse(localStorage.getItem('groups')) || [];\n    const savedNotes = JSON.parse(localStorage.getItem('notes')) || [];\n    setGroups(savedGroups);\n    setNotes(savedNotes);\n  }, []);\n  useEffect(() => {\n    // Save groups and notes to localStorage whenever they change\n    localStorage.setItem('groups', JSON.stringify(groups));\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [groups, notes]);\n  const getNotesForSelectedGroup = () => {\n    return notes.filter(note => note.group === groups[selectedGroup]);\n  };\n  const addGroup = groupName => {\n    if (groupName) {\n      setGroups([...groups, groupName]);\n    }\n    setIsPopupOpen(false);\n  };\n  const addNote = () => {\n    if (noteContent && selectedGroup !== null) {\n      const currentTime = new Date().toLocaleString();\n      const newNote = {\n        content: noteContent,\n        group: groups[selectedGroup],\n        createdAt: currentTime,\n        updatedAt: currentTime\n      };\n      setNotes([...notes, newNote]);\n      setNoteContent('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      addNote();\n    }\n  };\n  const handleGroupChange = index => {\n    setSelectedGroup(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notes-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [group, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleGroupChange(index),\n              children: \"Select Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notes-content\",\n        children: selectedGroup !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter note content\",\n            value: noteContent,\n            onChange: e => setNoteContent(e.target.value),\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNote,\n            children: \"Add Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"enter-icon\",\n            onClick: addNote,\n            children: \"\\u23CE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Notes for \", groups[selectedGroup]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), getNotesForSelectedGroup().map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: note.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Created at: \", note.createdAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Updated at: \", note.updatedAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"N2kVn2t9ISUHy7WF6riVwBLcGck=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","groups","setGroups","selectedGroup","setSelectedGroup","isPopupOpen","setIsPopupOpen","groupName","setGroupName","noteContent","setNoteContent","notes","setNotes","savedGroups","JSON","parse","localStorage","getItem","savedNotes","setItem","stringify","getNotesForSelectedGroup","filter","note","group","addGroup","addNote","currentTime","Date","toLocaleString","newNote","content","createdAt","updatedAt","handleKeyPress","e","key","handleGroupChange","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","placeholder","value","onChange","target","onKeyPress","_c","$RefreshReg$"],"sources":["/home/lenon/notes-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [groupName, setGroupName] = useState('');\n  const [noteContent, setNoteContent] = useState('');\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    // Load groups and notes from localStorage on component mount\n    const savedGroups = JSON.parse(localStorage.getItem('groups')) || [];\n    const savedNotes = JSON.parse(localStorage.getItem('notes')) || [];\n\n    setGroups(savedGroups);\n    setNotes(savedNotes);\n  }, []);\n\n  useEffect(() => {\n    // Save groups and notes to localStorage whenever they change\n    localStorage.setItem('groups', JSON.stringify(groups));\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [groups, notes]);\n\n  const getNotesForSelectedGroup = () => {\n    return notes.filter((note) => note.group === groups[selectedGroup]);\n  };\n\n  const addGroup = (groupName) => {\n    if (groupName) {\n      setGroups([...groups, groupName]);\n    }\n    setIsPopupOpen(false);\n  };\n\n  const addNote = () => {\n    if (noteContent && selectedGroup !== null) {\n      const currentTime = new Date().toLocaleString();\n      const newNote = {\n        content: noteContent,\n        group: groups[selectedGroup],\n        createdAt: currentTime,\n        updatedAt: currentTime,\n      };\n      setNotes([...notes, newNote]);\n      setNoteContent('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      addNote();\n    }\n  };\n\n  const handleGroupChange = (index) => {\n    setSelectedGroup(index);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Notes App</h1>\n      <div className=\"container\">\n        <div className=\"notes-list\">\n          <ul>\n            {groups.map((group, index) => (\n              <li key={index}>\n                {group}\n                <button onClick={() => handleGroupChange(index)}>Select Group</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"notes-content\">\n          {selectedGroup !== null && (\n            <div>\n              <input\n                type=\"text\"\n                placeholder=\"Enter note content\"\n                value={noteContent}\n                onChange={(e) => setNoteContent(e.target.value)}\n                onKeyPress={handleKeyPress}\n              />\n              <button onClick={addNote}>Add Note</button>\n              <span className=\"enter-icon\" onClick={addNote}>\n                &#x23CE;\n              </span>\n              <h2>Notes for {groups[selectedGroup]}</h2>\n              {getNotesForSelectedGroup().map((note, index) => (\n                <div key={index} className=\"note\">\n                  <p>{note.content}</p>\n                  <p>Created at: {note.createdAt}</p>\n                  <p>Updated at: {note.updatedAt}</p>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}