{"ast":null,"code":"var _jsxFileName = \"/home/lenon/notes-app/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './ChatApp.module.css';\nimport lock from '../assets/Vector.png';\nimport bgImage from '../assets/bgimage.png';\n// import createGroupIcon from '../assets/+.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [newMessageText, setNewMessageText] = useState('');\n  const createMessage = () => {\n    if (selectedContact) {\n      const newMessage = {\n        content: newMessageText,\n        sender: 'User',\n        timestamp: new Date().toLocaleString()\n      };\n      const updatedContacts = contacts.map(contact => {\n        if (contact.id === selectedContact.id) {\n          return {\n            ...contact,\n            notes: [...contact.notes, newMessage]\n          };\n        }\n        return contact;\n      });\n      setContacts(updatedContacts);\n      setNewMessageText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatApp,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.leftPanel,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Left Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contacts,\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.contact} ${selectedContact && selectedContact.id === contact.id ? styles.selectedContact : ''}`,\n        onClick: () => setSelectedContact(contact),\n        children: contact.name\n      }, contact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rightPanel,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: bgImage,\n        alt: bgImage,\n        className: styles.bgImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.pocketnotes,\n        children: \"Pocket Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.description,\n        children: [\"Send and receive messages without keeping your phone online.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), \"Use Pocket Notes on up to 4 linked devices and 1 mobile phone\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.FooterContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: lock,\n          alt: \"lock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"end-to-end encrypted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), \"      \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messages,\n      children: [selectedContact && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageContainer,\n        children: selectedContact.notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${note.sender === 'User' ? styles.sentMessage : styles.receivedMessage}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.messageContent,\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.timestamp,\n            children: note.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), selectedContact && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageInput,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message here...\",\n          value: newMessageText,\n          onChange: e => setNewMessageText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"NK3R1bR9zPCQ49f+IHE7iBXyKqY=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","styles","lock","bgImage","jsxDEV","_jsxDEV","ChatApp","_s","contacts","setContacts","selectedContact","setSelectedContact","newMessageText","setNewMessageText","createMessage","newMessage","content","sender","timestamp","Date","toLocaleString","updatedContacts","map","contact","id","notes","className","chatApp","children","leftPanel","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","rightPanel","src","alt","pocketnotes","description","FooterContainer","messages","messageContainer","note","index","sentMessage","receivedMessage","messageContent","messageInput","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/lenon/notes-app/src/components/Chat.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './ChatApp.module.css';\nimport lock from '../assets/Vector.png';\nimport bgImage from '../assets/bgimage.png';\n// import createGroupIcon from '../assets/+.png';\n\nconst ChatApp = () => {\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [newMessageText, setNewMessageText] = useState('');\n\n  const createMessage = () => {\n    if (selectedContact) {\n      const newMessage = {\n        content: newMessageText,\n        sender: 'User',\n        timestamp: new Date().toLocaleString(),\n      };\n\n      const updatedContacts = contacts.map((contact) => {\n        if (contact.id === selectedContact.id) {\n          return {\n            ...contact,\n            notes: [...contact.notes, newMessage],\n          };\n        }\n        return contact;\n      });\n\n      setContacts(updatedContacts);\n      setNewMessageText('');\n    }\n  };\n\n  return (\n    <div className={styles.chatApp}>\n      <div className={styles.leftPanel}>\n        {/* Add your left side content here */}\n        <button>Left Button</button>\n      </div>\n      <div className={styles.contacts}>\n        {contacts.map((contact) => (\n          <div\n            key={contact.id}\n            className={`${styles.contact} ${\n              selectedContact && selectedContact.id === contact.id\n                ? styles.selectedContact\n                : ''\n            }`}\n            onClick={() => setSelectedContact(contact)}\n          >\n            {contact.name}\n          </div>\n        ))}\n      </div>\n      <div className={styles.rightPanel}>\n        {/* Add your right side content here */}\n        <img src={bgImage} alt={bgImage} className={styles.bgImage} />\n            <p className={styles.pocketnotes}>Pocket Notes</p>\n            <p className={styles.description}>\n              Send and receive messages without keeping your phone online.\n              <br />\n              Use Pocket Notes on up to 4 linked devices and 1 mobile phone\n            </p>\n            <div className={styles.FooterContainer}>\n              <img src={lock} alt=\"lock\" />\n              <p>end-to-end encrypted</p>\n            </div>      </div>\n      <div className={styles.messages}>\n        {selectedContact && (\n          <div className={styles.messageContainer}>\n            {selectedContact.notes.map((note, index) => (\n              <div\n                key={index}\n                className={`${\n                  note.sender === 'User' ? styles.sentMessage : styles.receivedMessage\n                }`}\n              >\n                <div className={styles.messageContent}>{note.content}</div>\n                <div className={styles.timestamp}>{note.timestamp}</div>\n              </div>\n            ))}\n          </div>\n        )}\n        {selectedContact && (\n          <div className={styles.messageInput}>\n            <input\n              type=\"text\"\n              placeholder=\"Type your message here...\"\n              value={newMessageText}\n              onChange={(e) => setNewMessageText(e.target.value)}\n            />\n            <button onClick={createMessage}>Send</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}