{"ast":null,"code":"var _jsxFileName = \"/home/lenon/notes-app/src/components/Popup.jsx\",\n  _s = $RefreshSig$();\n// Popup.js\n\nimport React, { useState } from 'react';\nimport styles from './Popup.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Popup = ({\n  isPopupOpen,\n  closePopup,\n  createGroup\n}) => {\n  _s();\n  const [groupName, setGroupName] = useState('');\n  const [selectedColor, setSelectedColor] = useState(null);\n  const colors = [\"#B38BFA\", \"#FF79F2\", \"#43E6FC\", \"#F19576\", \"#0047FF\", \"#6691FF\"];\n  const handleCreateGroup = () => {\n    if (groupName && selectedColor) {\n      createGroup(groupName, selectedColor);\n      setGroupName('');\n      setSelectedColor(null);\n    } else {\n      // Handle validation or show an error message if necessary\n    }\n  };\n  const handleColorSelection = color => {\n    setSelectedColor(color);\n  };\n\n  // Save the notes to localStorage\n  localStorage.setItem(selectedGroup, JSON.stringify([...notes, newNote]));\n\n  // Focus on the note input field for the next entry\n  noteInputRef.current.focus();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isPopupOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.popup,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.closeIcon,\n        onClick: closePopup,\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Notes Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Group Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your group name....\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value),\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            handleCreateGroup();\n          }\n        },\n        ref: noteInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sidebar,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.sidebarList,\n          children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.sidebarListItem,\n            style: {\n              backgroundColor: color\n            },\n            onClick: () => handleColorSelection(color)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.createBtn,\n        onClick: handleCreateGroup,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n_s(Popup, \"roxV17kB+4zyCcZ2nLV/MijlrXc=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Popup","isPopupOpen","closePopup","createGroup","_s","groupName","setGroupName","selectedColor","setSelectedColor","colors","handleCreateGroup","handleColorSelection","color","localStorage","setItem","selectedGroup","JSON","stringify","notes","newNote","noteInputRef","current","focus","children","className","popup","closeIcon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyPress","key","ref","sidebar","sidebarList","map","index","sidebarListItem","style","backgroundColor","createBtn","_c","$RefreshReg$"],"sources":["/home/lenon/notes-app/src/components/Popup.jsx"],"sourcesContent":["// Popup.js\n\nimport React, { useState } from 'react';\nimport styles from './Popup.module.css';\n\nconst Popup = ({ isPopupOpen, closePopup, createGroup }) => {\n  const [groupName, setGroupName] = useState('');\n  const [selectedColor, setSelectedColor] = useState(null);\n  const colors = [\"#B38BFA\", \"#FF79F2\", \"#43E6FC\", \"#F19576\", \"#0047FF\", \"#6691FF\"];\n\n  const handleCreateGroup = () => {\n    if (groupName && selectedColor) {\n      createGroup(groupName, selectedColor);\n      setGroupName('');\n      setSelectedColor(null);\n    } else {\n      // Handle validation or show an error message if necessary\n    }\n  };\n\n  const handleColorSelection = (color) => {\n    setSelectedColor(color);\n  };\n\n  // Save the notes to localStorage\n  localStorage.setItem(selectedGroup, JSON.stringify([...notes, newNote]));\n\n  // Focus on the note input field for the next entry\n  noteInputRef.current.focus();\n\n\n  return (\n    <>\n      {isPopupOpen ? (\n        <div className={styles.popup}>\n          <span className={styles.closeIcon} onClick={closePopup}>\n            &#10006;\n          </span>\n          <h2>Create New Notes Group</h2>\n          <p>Group Name</p>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your group name....\"\n            value={groupName}\n            onChange={(e) => setGroupName(e.target.value)}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter') {\n                handleCreateGroup();\n              }\n            }}\n            ref={noteInputRef}\n          />\n          <div className={styles.sidebar}>\n            <p>Choose color</p>\n            <ul className={styles.sidebarList}>\n              {colors.map((color, index) => (\n                <li\n                  key={index}\n                  className={styles.sidebarListItem}\n                  style={{ backgroundColor: color }}\n                  onClick={() => handleColorSelection(color)}\n                />\n              ))}\n            </ul>\n          </div>\n          <button className={styles.createBtn} onClick={handleCreateGroup}>\n            Create\n          </button>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Popup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}