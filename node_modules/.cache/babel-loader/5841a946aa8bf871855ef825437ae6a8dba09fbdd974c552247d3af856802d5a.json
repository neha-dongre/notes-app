{"ast":null,"code":"var _jsxFileName = \"/home/lenon/notes-app/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './ChatApp.module.css'; // Update your CSS styles\nimport RightSideContent from './RightSideContent'; // Import the RightSideContent component\nimport LeftSideContent from './LeftSideContent'; // Import the LeftSideContent component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [contacts, setContacts] = useState([]); // Replace this with your contact/note data\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [newMessageText, setNewMessageText] = useState('');\n\n  // Function to create a new message/note\n  const createMessage = () => {\n    if (selectedContact) {\n      // Create a new message/note object\n      const newMessage = {\n        content: newMessageText,\n        sender: 'User',\n        // You can change this to the sender's name\n        timestamp: new Date().toLocaleString() // Current date and time\n      };\n\n      // Add the new message/note to the selected contact's notes\n      const updatedContacts = contacts.map(contact => {\n        if (contact.id === selectedContact.id) {\n          return {\n            ...contact,\n            notes: [...contact.notes, newMessage]\n          };\n        }\n        return contact;\n      });\n      setContacts(updatedContacts);\n      setNewMessageText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatApp,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.leftSide,\n      children: /*#__PURE__*/_jsxDEV(LeftSideContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rightSide,\n      children: /*#__PURE__*/_jsxDEV(RightSideContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"NK3R1bR9zPCQ49f+IHE7iBXyKqY=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","styles","RightSideContent","LeftSideContent","jsxDEV","_jsxDEV","ChatApp","_s","contacts","setContacts","selectedContact","setSelectedContact","newMessageText","setNewMessageText","createMessage","newMessage","content","sender","timestamp","Date","toLocaleString","updatedContacts","map","contact","id","notes","className","chatApp","children","leftSide","fileName","_jsxFileName","lineNumber","columnNumber","rightSide","_c","$RefreshReg$"],"sources":["/home/lenon/notes-app/src/components/Chat.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './ChatApp.module.css'; // Update your CSS styles\nimport RightSideContent from './RightSideContent'; // Import the RightSideContent component\nimport LeftSideContent from './LeftSideContent'; // Import the LeftSideContent component\n\nconst ChatApp = () => {\n  const [contacts, setContacts] = useState([]); // Replace this with your contact/note data\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [newMessageText, setNewMessageText] = useState('');\n\n  // Function to create a new message/note\n  const createMessage = () => {\n    if (selectedContact) {\n      // Create a new message/note object\n      const newMessage = {\n        content: newMessageText,\n        sender: 'User', // You can change this to the sender's name\n        timestamp: new Date().toLocaleString(), // Current date and time\n      };\n\n      // Add the new message/note to the selected contact's notes\n      const updatedContacts = contacts.map((contact) => {\n        if (contact.id === selectedContact.id) {\n          return {\n            ...contact,\n            notes: [...contact.notes, newMessage],\n          };\n        }\n        return contact;\n      });\n\n      setContacts(updatedContacts);\n      setNewMessageText('');\n    }\n  };\n\n  return (\n    <div className={styles.chatApp}>\n      <div className={styles.leftSide}>\n        {/* Render the LeftSideContent component */}\n        <LeftSideContent />\n      </div>\n      <div className={styles.rightSide}>\n        {/* Render the RightSideContent component */}\n        <RightSideContent />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB,CAAC,CAAC;AAC3C,OAAOC,gBAAgB,MAAM,oBAAoB,CAAC,CAAC;AACnD,OAAOC,eAAe,MAAM,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMc,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIJ,eAAe,EAAE;MACnB;MACA,MAAMK,UAAU,GAAG;QACjBC,OAAO,EAAEJ,cAAc;QACvBK,MAAM,EAAE,MAAM;QAAE;QAChBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC,CAAE;MAC1C,CAAC;;MAED;MACA,MAAMC,eAAe,GAAGb,QAAQ,CAACc,GAAG,CAAEC,OAAO,IAAK;QAChD,IAAIA,OAAO,CAACC,EAAE,KAAKd,eAAe,CAACc,EAAE,EAAE;UACrC,OAAO;YACL,GAAGD,OAAO;YACVE,KAAK,EAAE,CAAC,GAAGF,OAAO,CAACE,KAAK,EAAEV,UAAU;UACtC,CAAC;QACH;QACA,OAAOQ,OAAO;MAChB,CAAC,CAAC;MAEFd,WAAW,CAACY,eAAe,CAAC;MAC5BR,iBAAiB,CAAC,EAAE,CAAC;IACvB;EACF,CAAC;EAED,oBACER,OAAA;IAAKqB,SAAS,EAAEzB,MAAM,CAAC0B,OAAQ;IAAAC,QAAA,gBAC7BvB,OAAA;MAAKqB,SAAS,EAAEzB,MAAM,CAAC4B,QAAS;MAAAD,QAAA,eAE9BvB,OAAA,CAACF,eAAe;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACN5B,OAAA;MAAKqB,SAAS,EAAEzB,MAAM,CAACiC,SAAU;MAAAN,QAAA,eAE/BvB,OAAA,CAACH,gBAAgB;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA3CID,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA6Cb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}