{"ast":null,"code":"var _jsxFileName = \"/home/lenon/notes-app/src/components/RightSideContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './RightSideContent.module.css'; // Create a CSS module for this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RightSideContent = ({\n  isPopupOpen,\n  closePopup\n}) => {\n  _s();\n  const [groupName, setGroupName] = useState('');\n  const colors = [\"#B38BFA\", \"#FF79F2\", \"#43E6FC\", \"#F19576\", \"#0047FF\", \"#6691FF\"];\n  //   const [listOpen] = useState(false);\n\n  const handleCreateGroup = () => {\n    closePopup();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.rightside,\n    children: isPopupOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.popup,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.closeIcon,\n        onClick: () => closePopup(),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Notes Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Group Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your group name....\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"style.sidebar_list\",\n          children: colors.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"sidebar_list_item\",\n            style: {\n              backgroundColor: item\n            },\n            onClick: () => {/* Handle color selection here */}\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.createBtn,\n        onClick: handleCreateGroup,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(RightSideContent, \"YqvB45g9j5kZhEKuQVjsZijbxNM=\");\n_c = RightSideContent;\nexport default RightSideContent;\nvar _c;\n$RefreshReg$(_c, \"RightSideContent\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","RightSideContent","isPopupOpen","closePopup","_s","groupName","setGroupName","colors","handleCreateGroup","className","rightside","children","popup","closeIcon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","item","index","style","backgroundColor","createBtn","_c","$RefreshReg$"],"sources":["/home/lenon/notes-app/src/components/RightSideContent.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './RightSideContent.module.css'; // Create a CSS module for this component\n\nconst RightSideContent = ({ isPopupOpen, closePopup }) => {\n  const [groupName, setGroupName] = useState('');\n  const colors = [\"#B38BFA\", \"#FF79F2\", \"#43E6FC\", \"#F19576\", \"#0047FF\", \"#6691FF\"];\n//   const [listOpen] = useState(false);\n\n  const handleCreateGroup = () => {\n    closePopup();\n  };\n\n  return (\n    <div className={styles.rightside}>\n      {isPopupOpen ? (\n        <div className={styles.popup}>\n          {/* Cross icon for closing the popup */}\n          <span className={styles.closeIcon} onClick={() => closePopup()}>\n            &#10006;\n          </span>\n          <h2>Create New Notes Group</h2>\n          <p>Group Name</p>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your group name....\"\n            value={groupName}\n            onChange={(e) => setGroupName(e.target.value)}\n          />\n          <div className=\"sidebar\">\n            <p>Choose color</p>\n            <ul className=\"style.sidebar_list\">\n              {colors.map((item, index) => (\n                <li\n                  key={index}\n                  className=\"sidebar_list_item\"\n                  style={{ backgroundColor: item }}\n                  onClick={() => {/* Handle color selection here */}}\n                />\n              ))}\n            </ul>\n          </div>\n          <button className={styles.createBtn} onClick={handleCreateGroup}>\n            Create\n          </button>\n        </div>\n      ) : (\n        <>\n          {/* Place your right-side content here */}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default RightSideContent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,+BAA+B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMY,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EACnF;;EAEE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BL,UAAU,CAAC,CAAC;EACd,CAAC;EAED,oBACEL,OAAA;IAAKW,SAAS,EAAEb,MAAM,CAACc,SAAU;IAAAC,QAAA,EAC9BT,WAAW,gBACVJ,OAAA;MAAKW,SAAS,EAAEb,MAAM,CAACgB,KAAM;MAAAD,QAAA,gBAE3Bb,OAAA;QAAMW,SAAS,EAAEb,MAAM,CAACiB,SAAU;QAACC,OAAO,EAAEA,CAAA,KAAMX,UAAU,CAAC,CAAE;QAAAQ,QAAA,EAAC;MAEhE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPpB,OAAA;QAAAa,QAAA,EAAI;MAAsB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BpB,OAAA;QAAAa,QAAA,EAAG;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACjBpB,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,2BAA2B;QACvCC,KAAK,EAAEhB,SAAU;QACjBiB,QAAQ,EAAGC,CAAC,IAAKjB,YAAY,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFpB,OAAA;QAAKW,SAAS,EAAC,SAAS;QAAAE,QAAA,gBACtBb,OAAA;UAAAa,QAAA,EAAG;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACnBpB,OAAA;UAAIW,SAAS,EAAC,oBAAoB;UAAAE,QAAA,EAC/BJ,MAAM,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtB7B,OAAA;YAEEW,SAAS,EAAC,mBAAmB;YAC7BmB,KAAK,EAAE;cAAEC,eAAe,EAAEH;YAAK,CAAE;YACjCZ,OAAO,EAAEA,CAAA,KAAM,CAAC;UAAmC,GAH9Ca,KAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIX,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACNpB,OAAA;QAAQW,SAAS,EAAEb,MAAM,CAACkC,SAAU;QAAChB,OAAO,EAAEN,iBAAkB;QAAAG,QAAA,EAAC;MAEjE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAENpB,OAAA,CAAAE,SAAA,mBAEE;EACH;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CAjDIH,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AAmDtB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}