{"ast":null,"code":"var _jsxFileName = \"/home/lenon/notes-app/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './ChatApp.module.css';\nimport Popup from './Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [noteGroups, setNoteGroups] = useState([]);\n  const [selectedNoteGroup, setSelectedNoteGroup] = useState(null);\n  const [newNoteText, setNewNoteText] = useState('');\n  const createNoteGroup = (groupName, selectedColor) => {\n    // Create a new note group and add it to the noteGroups state\n    const newNoteGroup = {\n      name: groupName,\n      color: selectedColor,\n      notes: [] // Array to store notes for this group\n    };\n\n    setNoteGroups([...noteGroups, newNoteGroup]);\n  };\n  const addNoteToGroup = () => {\n    if (selectedNoteGroup && newNoteText) {\n      // Create a new note object\n      const newNote = {\n        content: newNoteText,\n        sender: 'User',\n        // You can change this to the sender's name\n        timestamp: new Date().toLocaleString()\n      };\n\n      // Add the new note to the selected note group's notes array\n      const updatedNoteGroups = noteGroups.map(group => {\n        if (group.name === selectedNoteGroup.name) {\n          return {\n            ...group,\n            notes: [...group.notes, newNote]\n          };\n        }\n        return group;\n      });\n      setNoteGroups(updatedNoteGroups);\n      setNewNoteText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatApp,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contacts,\n      children: noteGroups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.noteGroup} ${selectedNoteGroup && selectedNoteGroup.name === group.name ? styles.selectedNoteGroup : ''}`,\n        onClick: () => setSelectedNoteGroup(group),\n        style: {\n          backgroundColor: group.color\n        },\n        children: group.name\n      }, group.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messages,\n      children: [selectedNoteGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageContainer,\n        children: selectedNoteGroup.notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.message,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.messageContent,\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.timestamp,\n            children: note.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageInput,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message here...\",\n          value: newNoteText,\n          onChange: e => setNewNoteText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNoteToGroup,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      createNoteGroup: createNoteGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"juaWlzy+IW7X+YK78HvOM+MKIXg=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","styles","Popup","jsxDEV","_jsxDEV","ChatApp","_s","noteGroups","setNoteGroups","selectedNoteGroup","setSelectedNoteGroup","newNoteText","setNewNoteText","createNoteGroup","groupName","selectedColor","newNoteGroup","name","color","notes","addNoteToGroup","newNote","content","sender","timestamp","Date","toLocaleString","updatedNoteGroups","map","group","className","chatApp","children","contacts","noteGroup","onClick","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","messages","messageContainer","note","index","message","messageContent","messageInput","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/lenon/notes-app/src/components/Chat.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './ChatApp.module.css';\nimport Popup from './Popup';\n\nconst ChatApp = () => {\n  const [noteGroups, setNoteGroups] = useState([]);\n  const [selectedNoteGroup, setSelectedNoteGroup] = useState(null);\n  const [newNoteText, setNewNoteText] = useState('');\n\n  const createNoteGroup = (groupName, selectedColor) => {\n    // Create a new note group and add it to the noteGroups state\n    const newNoteGroup = {\n      name: groupName,\n      color: selectedColor,\n      notes: [], // Array to store notes for this group\n    };\n    setNoteGroups([...noteGroups, newNoteGroup]);\n  };\n\n  const addNoteToGroup = () => {\n    if (selectedNoteGroup && newNoteText) {\n      // Create a new note object\n      const newNote = {\n        content: newNoteText,\n        sender: 'User', // You can change this to the sender's name\n        timestamp: new Date().toLocaleString(),\n      };\n\n      // Add the new note to the selected note group's notes array\n      const updatedNoteGroups = noteGroups.map((group) => {\n        if (group.name === selectedNoteGroup.name) {\n          return {\n            ...group,\n            notes: [...group.notes, newNote],\n          };\n        }\n        return group;\n      });\n\n      setNoteGroups(updatedNoteGroups);\n      setNewNoteText('');\n    }\n  };\n\n  return (\n    <div className={styles.chatApp}>\n      <div className={styles.contacts}>\n        {/* Display note groups on the left side */}\n        {noteGroups.map((group) => (\n          <div\n            key={group.name}\n            className={`${styles.noteGroup} ${\n              selectedNoteGroup && selectedNoteGroup.name === group.name\n                ? styles.selectedNoteGroup\n                : ''\n            }`}\n            onClick={() => setSelectedNoteGroup(group)}\n            style={{ backgroundColor: group.color }}\n          >\n            {group.name}\n          </div>\n        ))}\n      </div>\n      <div className={styles.messages}>\n        {/* Display notes on the right side */}\n        {selectedNoteGroup && (\n          <div className={styles.messageContainer}>\n            {selectedNoteGroup.notes.map((note, index) => (\n              <div key={index} className={styles.message}>\n                <div className={styles.messageContent}>{note.content}</div>\n                <div className={styles.timestamp}>{note.timestamp}</div>\n              </div>\n            ))}\n          </div>\n        )}\n        <div className={styles.messageInput}>\n          <input\n            type=\"text\"\n            placeholder=\"Type your message here...\"\n            value={newNoteText}\n            onChange={(e) => setNewNoteText(e.target.value)}\n          />\n          <button onClick={addNoteToGroup}>Send</button>\n        </div>\n      </div>\n      {/* Render the Popup component */}\n      <Popup createNoteGroup={createNoteGroup} />\n    </div>\n  );\n};\n\nexport default ChatApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}