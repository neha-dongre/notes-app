{"ast":null,"code":"var _jsxFileName = \"/home/lenon/notes-app/src/components/Group.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesApp = () => {\n  _s();\n  // State for managing groups, selected group, notes, and note input\n  const [groups, setGroups] = useState(['Work', 'Personal']);\n  const [selectedGroup, setSelectedGroup] = useState(0);\n  const [notes, setNotes] = useState([]);\n  const [noteInput, setNoteInput] = useState('');\n\n  // Function to create a new group\n  const createGroup = groupName => {\n    setGroups([...groups, groupName]);\n  };\n\n  // Function to add a new note to the selected group\n  const addNote = () => {\n    if (noteInput.trim() !== '') {\n      const currentTime = new Date().toLocaleString();\n      const newNote = {\n        content: noteInput,\n        group: groups[selectedGroup],\n        createdAt: currentTime,\n        updatedAt: currentTime\n      };\n      setNotes([...notes, newNote]);\n      setNoteInput('');\n    }\n  };\n\n  // Function to switch to a different group\n  const switchGroup = index => {\n    setSelectedGroup(index);\n  };\n\n  // Effect to save and load notes from localStorage\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('notes')) || [];\n    setNotes(savedNotes);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: index === selectedGroup ? 'active' : '',\n          onClick: () => switchGroup(index),\n          children: group\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Create a new group\",\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            createGroup(e.target.value);\n            e.target.value = '';\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Notes for \", groups[selectedGroup]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notes.map((note, index) => note.group === groups[selectedGroup] ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Created at: \", note.createdAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Updated at: \", note.updatedAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter note content\",\n          value: noteInput,\n          onChange: e => setNoteInput(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              addNote();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNote,\n          children: \"Add Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesApp, \"MxO8hDA+be5CN3rBlsSOZlFzeMQ=\");\n_c = NotesApp;\nexport default NotesApp;\nvar _c;\n$RefreshReg$(_c, \"NotesApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NotesApp","_s","groups","setGroups","selectedGroup","setSelectedGroup","notes","setNotes","noteInput","setNoteInput","createGroup","groupName","addNote","trim","currentTime","Date","toLocaleString","newNote","content","group","createdAt","updatedAt","switchGroup","index","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","placeholder","onKeyPress","e","key","target","value","note","onChange","_c","$RefreshReg$"],"sources":["/home/lenon/notes-app/src/components/Group.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst NotesApp = () => {\n  // State for managing groups, selected group, notes, and note input\n  const [groups, setGroups] = useState(['Work', 'Personal']);\n  const [selectedGroup, setSelectedGroup] = useState(0);\n  const [notes, setNotes] = useState([]);\n  const [noteInput, setNoteInput] = useState('');\n\n  // Function to create a new group\n  const createGroup = (groupName) => {\n    setGroups([...groups, groupName]);\n  };\n\n  // Function to add a new note to the selected group\n  const addNote = () => {\n    if (noteInput.trim() !== '') {\n      const currentTime = new Date().toLocaleString();\n      const newNote = {\n        content: noteInput,\n        group: groups[selectedGroup],\n        createdAt: currentTime,\n        updatedAt: currentTime,\n      };\n      setNotes([...notes, newNote]);\n      setNoteInput('');\n    }\n  };\n\n  // Function to switch to a different group\n  const switchGroup = (index) => {\n    setSelectedGroup(index);\n  };\n\n  // Effect to save and load notes from localStorage\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('notes')) || [];\n    setNotes(savedNotes);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n\n  return (\n    <div className=\"notes-app\">\n      <h1>Notes App</h1>\n      <div className=\"group-container\">\n        <h2>Groups</h2>\n        <ul>\n          {groups.map((group, index) => (\n            <li\n              key={index}\n              className={index === selectedGroup ? 'active' : ''}\n              onClick={() => switchGroup(index)}\n            >\n              {group}\n            </li>\n          ))}\n        </ul>\n        <input\n          type=\"text\"\n          placeholder=\"Create a new group\"\n          onKeyPress={(e) => {\n            if (e.key === 'Enter') {\n              createGroup(e.target.value);\n              e.target.value = '';\n            }\n          }}\n        />\n      </div>\n      <div className=\"notes-container\">\n        <h2>Notes for {groups[selectedGroup]}</h2>\n        <ul>\n          {notes.map((note, index) =>\n            note.group === groups[selectedGroup] ? (\n              <li key={index}>\n                <p>{note.content}</p>\n                <p>Created at: {note.createdAt}</p>\n                <p>Updated at: {note.updatedAt}</p>\n              </li>\n            ) : null\n          )}\n        </ul>\n        <div className=\"note-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter note content\"\n            value={noteInput}\n            onChange={(e) => setNoteInput(e.target.value)}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter') {\n                addNote();\n              }\n            }}\n          />\n          <button onClick={addNote}>Add Note</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotesApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}